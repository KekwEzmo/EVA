/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the Microsoft Live Share SDK License.
 */
import { ITelemetryProperties } from "@fluidframework/common-definitions";
import { IRuntimeSignaler } from "./LiveEventScope";
import { LiveShareRuntime } from "./LiveShareRuntime";
/**
 * Properties included on all events sent by `LiveTelemetryLogger`.
 */
export interface ILiveTelemetryProperties extends ITelemetryProperties {
    /**
     * Optional. ID of the client if it's been assigned by the runtime.
     */
    clientId?: string;
    /**
     * ID used to correlate multiple events for an operation. Typically of the form of
     * `${clientId}:${timestamp}` but may include the clientId of the sender when logging
     * that an event was received.
     */
    correlationId: string;
    /**
     * Name of the event being logged.
     */
    eventName: string;
    /**
     * Time that the event occurred. The timestamp is generated by `_liveRuntime.getTimestamp`.
     */
    timestamp: string;
}
/**
 * Wraps the configured logger for the runtime and ensures that certain mandatory properties
 * are included on outgoing telemetry events.
 */
export declare class LiveTelemetryLogger {
    private readonly _liveRuntime;
    private readonly _runtime;
    /**
     * Creates a new `LiveTelemetryLogger` instance.
     * @param runtime Containers runtime instance.
     */
    constructor(runtime: IRuntimeSignaler, _liveRuntime: LiveShareRuntime);
    /**
     * Sends a generic telemetry event.
     * @param eventName Name of the event to send.
     * @param error Optional. Error object to send with event.
     * @param additionalProperties Optional. Additional properties to include with event.
     */
    sendTelemetryEvent(eventName: string, error?: any, additionalProperties?: Partial<ILiveTelemetryProperties>): void;
    /**
     * Sends an error event.
     * @param eventName Name of the event to send.
     * @param error Optional. Error object to send with event.
     * @param additionalProperties Optional. Additional properties to include with event.
     */
    sendErrorEvent(eventName: string, error?: any, additionalProperties?: Partial<ILiveTelemetryProperties>): void;
    /**
     * Sends a performance telemetry event.
     * @param eventName Name of the event to send.
     * @param duration The duration of the event in milliseconds.
     * @param error Optional. Error object to send with event.
     * @param additionalProperties Optional. Additional properties to include with event.
     */
    sendPerformanceEvent(eventName: string, duration: number, error?: any, additionalProperties?: Partial<ILiveTelemetryProperties>): void;
    private createTelemetryEvent;
    static formatCorrelationId(clientId: string | undefined, timestamp: number): string;
}
//# sourceMappingURL=LiveTelemetryLogger.d.ts.map