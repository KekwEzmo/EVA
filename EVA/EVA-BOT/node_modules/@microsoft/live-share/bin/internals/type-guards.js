"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTimestampProvider = exports.isILiveEvent = exports.isErrorLike = exports.isIClientInfo = exports.isClientRolesResponse = exports.isMobileWorkaroundRolesResponse = void 0;
/**
 * @hidden
 */
function isMobileWorkaroundRolesResponse(value) {
    return isClientRolesResponse(value === null || value === void 0 ? void 0 : value.userRoles);
}
exports.isMobileWorkaroundRolesResponse = isMobileWorkaroundRolesResponse;
/**
 * @hidden
 */
function isClientRolesResponse(value) {
    return (Array.isArray(value) && value.every((val) => typeof val === "string"));
}
exports.isClientRolesResponse = isClientRolesResponse;
/**
 * @hidden
 */
function isIClientInfo(value) {
    return (value === undefined ||
        ((value === null || value === void 0 ? void 0 : value.userId) !== undefined && isClientRolesResponse(value === null || value === void 0 ? void 0 : value.roles)));
}
exports.isIClientInfo = isIClientInfo;
/**
 * teams-js returns SdkError types, which are an object and not Error, so we have a special guard
 * @hidden
 */
function isErrorLike(value) {
    return typeof (value === null || value === void 0 ? void 0 : value.message) === "string";
}
exports.isErrorLike = isErrorLike;
/**
 * @hidden
 */
function isILiveEvent(value) {
    return (typeof value === "object" &&
        typeof value.clientId === "string" &&
        typeof value.timestamp === "number" &&
        typeof value.name === "string");
}
exports.isILiveEvent = isILiveEvent;
/**
 * @hidden
 */
function isTimestampProvider(value) {
    return typeof (value === null || value === void 0 ? void 0 : value.start) === "function";
}
exports.isTimestampProvider = isTimestampProvider;
//# sourceMappingURL=type-guards.js.map