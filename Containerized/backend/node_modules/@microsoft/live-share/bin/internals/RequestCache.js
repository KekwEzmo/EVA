"use strict";
/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the Microsoft Live Share SDK License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestCache = void 0;
/**
 * @hidden
 */
class RequestCache {
    constructor(cacheLifetime) {
        this._cache = new Map();
        this._cacheLifetime = cacheLifetime;
    }
    cacheRequest(key, fnRequest) {
        const startTime = new Date().getTime();
        let entry;
        if (this._cache.has(key)) {
            entry = this._cache.get(key);
            const expiresAt = entry.startTime + this._cacheLifetime;
            if (startTime < expiresAt) {
                // Cache entry is valid so return cached promise
                return entry.promise;
            }
        }
        // Make new request and cache promise
        const promise = fnRequest();
        this._cache.set(key, { startTime, promise });
        return promise;
    }
    has(key) {
        return this._cache.has(key);
    }
}
exports.RequestCache = RequestCache;
//# sourceMappingURL=RequestCache.js.map