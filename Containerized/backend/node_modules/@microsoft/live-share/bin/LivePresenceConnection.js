"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LivePresenceConnection = void 0;
const internals_1 = require("./internals");
const LiveEvent_1 = require("./LiveEvent");
const LivePresenceUser_1 = require("./LivePresenceUser");
/**
 * A connection that presence is being tracked for.
 */
class LivePresenceConnection {
    /**
     * @hidden
     */
    constructor(_evt, _isLocalConnection, _expirationPeriod, _liveRuntime) {
        this._evt = _evt;
        this._isLocalConnection = _isLocalConnection;
        this._expirationPeriod = _expirationPeriod;
        this._liveRuntime = _liveRuntime;
    }
    /**
     * If `true` the connection is a local connection.
     */
    get isLocalConnection() {
        return this._isLocalConnection;
    }
    /**
     * ID of the client.
     */
    get clientId() {
        return this._evt.clientId;
    }
    /**
     * Connections current state.
     *
     * @remarks
     * This is automatically set to `PresenceState.offline` if the users client hasn't sent updates
     * for a period of time.
     */
    get state() {
        return this.hasExpired() ? LivePresenceUser_1.PresenceState.offline : this._evt.data.state;
    }
    /**
     * Optional data shared by the user.
     */
    get data() {
        return (0, internals_1.cloneValue)(this._evt.data.data);
    }
    /**
     * @hidden
     */
    updateConnection(evt) {
        if (this._evt.clientId !== evt.clientId) {
            throw new Error(`LivePresenceConnection.updateConnection called with event with different clientId`);
        }
        if (!LiveEvent_1.LiveEvent.isNewer(this._evt, evt))
            return;
        this._evt = evt;
    }
    /**
     * @hidden
     */
    set expirationPeriod(value) {
        this._expirationPeriod = value;
    }
    hasExpired() {
        const now = this._liveRuntime.getTimestamp();
        const elapsed = now - this._evt.timestamp;
        return (!this._isLocalConnection &&
            elapsed > this._expirationPeriod.milliseconds);
    }
}
exports.LivePresenceConnection = LivePresenceConnection;
//# sourceMappingURL=LivePresenceConnection.js.map